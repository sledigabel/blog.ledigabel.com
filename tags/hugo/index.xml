<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Seb&#39;s corner</title>
    <link>https://blog.ledigabel.com/tags/hugo/</link>
    <description>Recent content in hugo on Seb&#39;s corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Aug 2020 22:09:43 +0200</lastBuildDate>
    
	<atom:link href="https://blog.ledigabel.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Finally switched to Github Pages custom domain</title>
      <link>https://blog.ledigabel.com/posts/moved-to-github-custom/</link>
      <pubDate>Wed, 12 Aug 2020 22:09:43 +0200</pubDate>
      
      <guid>https://blog.ledigabel.com/posts/moved-to-github-custom/</guid>
      <description>&lt;h1 id=&#34;i-finally-moved-my-website-to-github-pages-with-custom-domain-and-ssl&#34;&gt;I finally moved my website to Github Pages with custom domain and SSL&lt;/h1&gt;
&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;Previously I explained how I set up &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; to work with
Github Actions and Github Pages.&lt;/p&gt;
&lt;p&gt;It worked out of the box with my previous repo set up for Github Pages (&lt;a href=&#34;http://sledigabel.github.io&#34;&gt;http://sledigabel.github.io&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;There are several documentations on how to set it up with your custom domain. TL;DR: you have to set up a CNAME record in your custom domain name DNS manager and make it point to your github.io website.&lt;/p&gt;
&lt;p&gt;This is great, but while the github.io domain works with SSL out of the box (using Let&amp;rsquo;s encrypt in the background to generate a certificate), it did not work with a custom domain because my repository was primarily set up for a github.io endpoint not a custom domain.
Bottom line: the CNAME works and does its job but then the SSL certificate generated by Let&amp;rsquo;s encrypt has no knowledge of it and your browser righly assumes the certificate is invalid for the endpoint you&amp;rsquo;re trying to access it from.&lt;/p&gt;
&lt;p&gt;In this instance, the endpoint is (blog.ledigabel.com) and I wanted to make this work.&lt;/p&gt;
&lt;h2 id=&#34;steps&#34;&gt;Steps&lt;/h2&gt;
&lt;p&gt;I had to recreate a new repository for this specific new endpoint. The problem was the github page website was created before custom domains were a thing, and so it was upgraded using custom domain with the CNAME trick rather than properly setup.&lt;/p&gt;
&lt;p&gt;I mainly followed the steps &lt;a href=&#34;https://github.blog/2018-05-01-github-pages-custom-domains-https/&#34;&gt;here&lt;/a&gt;.
I also found &lt;a href=&#34;https://varunpatil.me/blog/posts/https-with-github-pages-custom-domain/&#34;&gt;this article&lt;/a&gt; very useful, more of a step-by-step walkthrough.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll basically write a quick summary of the steps I took:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new repository &lt;code&gt;blog.ledigabel.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate a static website with &lt;code&gt;Hugo&lt;/code&gt; and copy the files over to the new repository.&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;CNAME&lt;/code&gt; file with content: &amp;ldquo;blog.ledigabel.com&amp;rdquo;&lt;/li&gt;
&lt;li&gt;In &lt;em&gt;Settings&lt;/em&gt;, Add a custom domain name under &amp;ldquo;Github pages&amp;rdquo; and tick &amp;ldquo;Enforce HTTPS&amp;rdquo;.
&lt;img src=&#34;https://blog.ledigabel.com/images/Github_custom_domain_https.png&#34; alt=&#34;Github settings&#34;&gt;&lt;/li&gt;
&lt;li&gt;Update the master hugo repository (containing the templated files), remove the old submodule with the new one&lt;/li&gt;
&lt;li&gt;Update Github Actions to update the new repository&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The word that comes to my mind is easy peasy. I was under the impression that, as it used to be the case, only repositories called &lt;code&gt;*.github.io&lt;/code&gt; could be used as Github Pages, but virtually any one would do. I&amp;rsquo;m considering doing the same thing for my static about page now. Any repository can now be used to work as a static website. I can now see why people are using this all the time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Set up Hugo and Github actions</title>
      <link>https://blog.ledigabel.com/posts/hugo-and-github-actions/</link>
      <pubDate>Thu, 21 May 2020 08:43:54 +0100</pubDate>
      
      <guid>https://blog.ledigabel.com/posts/hugo-and-github-actions/</guid>
      <description>&lt;h1 id=&#34;tldr&#34;&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;Hugo is a powerful static blog generator, Github pages can host a static website from a github repository, Github actions can trigger automation based on commits. It is like those three things were made to come together.&lt;/p&gt;
&lt;h1 id=&#34;hugo&#34;&gt;Hugo&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; is a powerful static blog generator written in Go.
It has great features, great themes and a large community, so when I was looking for a static website generator I didn&amp;rsquo;t look further.&lt;/p&gt;
&lt;h2 id=&#34;the-get-started-bit&#34;&gt;The Get-Started bit&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;The &lt;em&gt;standard&lt;/em&gt; way of running hugo is&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Initialise your Hugo site and create a new repository for your blog&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site MySite
cd MySite
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install a theme&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the theme is recommended to be installed as a submodule.&lt;/li&gt;
&lt;li&gt;I &lt;em&gt;personally&lt;/em&gt; cloned the theme to allow personal tweaks but also to track changes separately from the upstream repo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find my cloned theme &lt;a href=&#34;https://github.com/sledigabel/hugo-coder&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s a clone from &lt;a href=&#34;https://github.com/luizdepra/hugo-coder,&#34;&gt;https://github.com/luizdepra/hugo-coder,&lt;/a&gt; which I think looks amazing.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Add content and render your website&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new posts/my-first-post.md
&lt;span style=&#34;color:#75715e&#34;&gt;# edit the content/posts/my-first-post.md&lt;/span&gt;
hugo server -D &lt;span style=&#34;color:#75715e&#34;&gt;# will run a local website and continuously refresh the content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Generate your static website.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -D &lt;span style=&#34;color:#75715e&#34;&gt;# all content is created in ./public/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Now what?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You&amp;rsquo;re meant to take all files in the public directory and copy it into your web server, ready to serve requests.
Typically you&amp;rsquo;d use SFTP, or upload the content to S3 using static pages.&lt;/p&gt;
&lt;h1 id=&#34;github&#34;&gt;GitHub&lt;/h1&gt;
&lt;h2 id=&#34;github-pages&#34;&gt;Github Pages&lt;/h2&gt;
&lt;p&gt;Github has been offering &lt;a href=&#34;https://pages.github.com/&#34;&gt;web hosting&lt;/a&gt; as part of &lt;a href=&#34;https://en.wikipedia.org/wiki/GitHub#GitHub_Pages&#34;&gt;its free tier for a long time&lt;/a&gt;.
In a nutshell, the content of the git repo is exposed statically in a web server under your &lt;code&gt;&amp;lt;account_id&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s just about a million posts from various people about how to use them.
To name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;&gt;Hugo and hosting pages on github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@svinkle/publish-and-share-your-own-website-for-free-with-github-2eff049a1cb5&#34;&gt;A blog post about getting started by Scott Vinkle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.teamtreehouse.com/using-github-pages-to-host-your-website&#34;&gt;Same from Matt West at Treehouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You get the idea.&lt;/p&gt;
&lt;h2 id=&#34;github-action&#34;&gt;Github action&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s where things get really interesting.
&lt;a href=&#34;https://github.com/features/actions&#34;&gt;Github Actions&lt;/a&gt; was introduced by Github &lt;a href=&#34;https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/&#34;&gt;not too long ago&lt;/a&gt;.
It&amp;rsquo;s got a free tier, providing you run your automation on linux and you&amp;rsquo;re not hammering their servers.&lt;/p&gt;
&lt;p&gt;Again, plenty of tutorials and excellent documentation online. The gist of it is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CI/CD configuration stored in a &lt;code&gt;.github&lt;/code&gt; directory as YAML or JSON&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Actions&amp;rdquo; are essentially off-the-shelf containers (rebuilt or generated at run time), you can pick some from the market place or come up with your own.&lt;/li&gt;
&lt;li&gt;Integration with the github UI, get quick feedback on commits, push or PRs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;set-up&#34;&gt;Set up&lt;/h1&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;p&gt;The various repositories used in this setup are listed as follow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A repository containing the hugo sources.&lt;/li&gt;
&lt;li&gt;A repository cloned from upstream as a hugo theme&lt;/li&gt;
&lt;li&gt;A repository containing the static website (Github pages)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Both theme and website repositories are set up as submodules from the main hugo
sources one. The reason behind this is to make it easy to automate it from github action that is very single repository centric.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ledigabel.com/images/hugo-git-repos.png&#34; alt=&#34;Hugo repositories setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;It makes it pretty easy to tie in Hugo sources changes with the website rendering
and the theme used during the website production.&lt;/p&gt;
&lt;h2 id=&#34;github-action-1&#34;&gt;GitHub action&lt;/h2&gt;
&lt;p&gt;The Github action is triggering on push and follows a relatively straightforward
path, that is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Checkout, + submodules&lt;/li&gt;
&lt;li&gt;Remove the old generated static website&lt;/li&gt;
&lt;li&gt;Generate the new website&lt;/li&gt;
&lt;li&gt;Push new website content&lt;/li&gt;
&lt;li&gt;Update new website revision on master repo&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can find the gist of it here:
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/sledigabel/ecacbdddedad31fc7a8a39690c4828e4.js&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My first post!</title>
      <link>https://blog.ledigabel.com/posts/my-first-post/</link>
      <pubDate>Wed, 09 Oct 2019 11:33:46 +0100</pubDate>
      
      <guid>https://blog.ledigabel.com/posts/my-first-post/</guid>
      <description>&lt;h1 id=&#34;new-post-new-site-new-life&#34;&gt;New post, new site, new life&lt;/h1&gt;
&lt;p&gt;Hello readers :-) welcome to my blog.&lt;/p&gt;
&lt;p&gt;Got some time to try out &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and actually start a blog.
Will post here some findings, investigations and other things.&lt;/p&gt;
&lt;p&gt;Stay tuned ;-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
